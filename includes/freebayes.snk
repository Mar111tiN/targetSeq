

rule freebayes:
    input:
        unpack(get_freebayes_input)
    output:
        vcf = "freebayes/{sample}.vcf"
    threads:
        config['freebayes']['threads']
    params:
        refgen = full_path('genome'),
        min = f"-C {config['freebayes']['min-alternate-count']} -F {config['freebayes']['min-alternate-fraction']}",
        qual = f"-q {config['freebayes']['q']} -Q {config['freebayes']['Q']}"
    conda:
        "../env/freebayes-env.yml"
    shell:
        "freebayes -f {params.refgen} {params.min} {params.qual} {input.bam} > {output.vcf}"


rule freebayes2table:
    input:
        vcf = "freebayes/{sample}.vcf"
    output:
        "table/{sample}.csv"
    threads: 2
    conda:
        "../env/vcf-env.yml"
    params:
        vcf2table = get_script('vcf2table'),
        varscan2table = get_script('varscan2table')
    script:
        "../scripts/varscan2table.py"
